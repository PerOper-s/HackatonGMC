package gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class DashboardOrganizzatore {
    private JPanel dashboardOrganizzatore;
    private JPanel pannelloBottoni;
    private JButton creaHackaton;
    private JButton invitaGiudiciButton;
    private JButton visualizzaHackaton;
    private JLabel messaggioBenvenuto2;
    private JPanel pannelloLogic;
    private JPanel panelloTesti;
    private JLabel AreaDiTesto;
    private JTextField fieldScrittura;
    private JLabel messaggioErroreOrg;
    private JButton indietroButton;
    private JButton avantiButton;
    private JButton createButton;
    private JTextArea textAreaVisualizza;
    private JScrollPane scrollPaneVisualizza;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        dashboardOrganizzatore = new JPanel();
        dashboardOrganizzatore.setLayout(new BorderLayout(0, 0));
        dashboardOrganizzatore.setBackground(new Color(-15918294));
        dashboardOrganizzatore.setForeground(new Color(-1));
        dashboardOrganizzatore.setMaximumSize(new Dimension(900, 600));
        dashboardOrganizzatore.setMinimumSize(new Dimension(900, 600));
        dashboardOrganizzatore.setPreferredSize(new Dimension(900, 600));
        pannelloBottoni = new JPanel();
        pannelloBottoni.setLayout(new GridLayoutManager(6, 1, new Insets(15, 15, 15, 15), -1, -1));
        pannelloBottoni.setBackground(new Color(-15918294));
        pannelloBottoni.setEnabled(true);
        dashboardOrganizzatore.add(pannelloBottoni, BorderLayout.EAST);
        pannelloBottoni.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final Spacer spacer1 = new Spacer();
        pannelloBottoni.add(spacer1, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        creaHackaton = new JButton();
        creaHackaton.setBackground(new Color(-13877680));
        creaHackaton.setFocusable(false);
        Font creaHackatonFont = this.$$$getFont$$$("Inter", -1, -1, creaHackaton.getFont());
        if (creaHackatonFont != null) creaHackaton.setFont(creaHackatonFont);
        creaHackaton.setForeground(new Color(-1));
        creaHackaton.setHideActionText(false);
        creaHackaton.setHorizontalTextPosition(4);
        creaHackaton.setIconTextGap(6);
        creaHackaton.setRequestFocusEnabled(true);
        creaHackaton.setText("Crea Hackaton");
        pannelloBottoni.add(creaHackaton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(175, 35), new Dimension(175, 35), new Dimension(175, 35), 0, false));
        invitaGiudiciButton = new JButton();
        invitaGiudiciButton.setBackground(new Color(-13877680));
        invitaGiudiciButton.setFocusable(false);
        Font invitaGiudiciButtonFont = this.$$$getFont$$$("Inter", -1, -1, invitaGiudiciButton.getFont());
        if (invitaGiudiciButtonFont != null) invitaGiudiciButton.setFont(invitaGiudiciButtonFont);
        invitaGiudiciButton.setForeground(new Color(-1));
        invitaGiudiciButton.setHorizontalTextPosition(4);
        invitaGiudiciButton.setIconTextGap(6);
        invitaGiudiciButton.setRequestFocusEnabled(true);
        invitaGiudiciButton.setText("Invita Giudici");
        pannelloBottoni.add(invitaGiudiciButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(175, 35), new Dimension(175, 35), new Dimension(175, 35), 0, false));
        visualizzaHackaton = new JButton();
        visualizzaHackaton.setBackground(new Color(-13877680));
        visualizzaHackaton.setFocusable(false);
        Font visualizzaHackatonFont = this.$$$getFont$$$("Inter", -1, -1, visualizzaHackaton.getFont());
        if (visualizzaHackatonFont != null) visualizzaHackaton.setFont(visualizzaHackatonFont);
        visualizzaHackaton.setForeground(new Color(-1));
        visualizzaHackaton.setHorizontalTextPosition(4);
        visualizzaHackaton.setIconTextGap(6);
        visualizzaHackaton.setRequestFocusEnabled(true);
        visualizzaHackaton.setText("Visualizza Hackaton");
        pannelloBottoni.add(visualizzaHackaton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(175, 35), new Dimension(175, 35), new Dimension(175, 35), 0, false));
        messaggioBenvenuto2 = new JLabel();
        messaggioBenvenuto2.setBackground(new Color(-15918294));
        Font messaggioBenvenuto2Font = this.$$$getFont$$$("Inter", -1, 11, messaggioBenvenuto2.getFont());
        if (messaggioBenvenuto2Font != null) messaggioBenvenuto2.setFont(messaggioBenvenuto2Font);
        messaggioBenvenuto2.setForeground(new Color(-1));
        messaggioBenvenuto2.setIcon(new ImageIcon(getClass().getResource("/icone/icone bianche/icons8-user-40.png")));
        messaggioBenvenuto2.setRequestFocusEnabled(true);
        messaggioBenvenuto2.setText("");
        pannelloBottoni.add(messaggioBenvenuto2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setVisible(false);
        pannelloBottoni.add(panel1, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        pannelloLogic = new JPanel();
        pannelloLogic.setLayout(new GridLayoutManager(7, 4, new Insets(15, 15, 15, 15), -1, -1));
        pannelloLogic.setBackground(new Color(-14540254));
        pannelloLogic.setEnabled(true);
        pannelloLogic.setForeground(new Color(-13947600));
        pannelloLogic.setMaximumSize(new Dimension(150, 70));
        pannelloLogic.setMinimumSize(new Dimension(150, 70));
        pannelloLogic.setPreferredSize(new Dimension(150, 70));
        pannelloLogic.setVisible(false);
        dashboardOrganizzatore.add(pannelloLogic, BorderLayout.CENTER);
        pannelloLogic.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        avantiButton = new JButton();
        avantiButton.setBackground(new Color(-13877680));
        avantiButton.setFocusable(true);
        avantiButton.setForeground(new Color(-1));
        avantiButton.setText("Avanti");
        pannelloLogic.add(avantiButton, new GridConstraints(1, 3, 4, 1, GridConstraints.ANCHOR_SOUTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(100, 25), new Dimension(100, 25), new Dimension(100, 25), 0, false));
        indietroButton = new JButton();
        indietroButton.setBackground(new Color(-13877680));
        indietroButton.setFocusable(true);
        indietroButton.setForeground(new Color(-1));
        indietroButton.setText("Indietro");
        pannelloLogic.add(indietroButton, new GridConstraints(1, 0, 4, 1, GridConstraints.ANCHOR_SOUTHEAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(100, 25), new Dimension(100, 25), new Dimension(100, 25), 1, false));
        fieldScrittura = new JTextField();
        fieldScrittura.setBackground(new Color(-13877680));
        fieldScrittura.setFocusable(true);
        fieldScrittura.setForeground(new Color(-1));
        fieldScrittura.setSelectedTextColor(new Color(-1));
        pannelloLogic.add(fieldScrittura, new GridConstraints(4, 1, 1, 2, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(300, 30), new Dimension(300, 30), new Dimension(300, 30), 0, false));
        createButton = new JButton();
        createButton.setBackground(new Color(-13877680));
        createButton.setForeground(new Color(-1));
        createButton.setText("Crea");
        createButton.setVisible(false);
        pannelloLogic.add(createButton, new GridConstraints(5, 1, 1, 2, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(100, 25), new Dimension(100, 25), new Dimension(100, 25), 0, false));
        messaggioErroreOrg = new JLabel();
        messaggioErroreOrg.setFocusable(true);
        messaggioErroreOrg.setText("Label");
        pannelloLogic.add(messaggioErroreOrg, new GridConstraints(3, 1, 1, 2, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        pannelloLogic.add(spacer2, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        pannelloLogic.add(spacer3, new GridConstraints(6, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        pannelloLogic.add(spacer4, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        pannelloLogic.add(spacer5, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        AreaDiTesto = new JLabel();
        AreaDiTesto.setBackground(new Color(-10658467));
        AreaDiTesto.setFocusable(true);
        Font AreaDiTestoFont = this.$$$getFont$$$("Inter", -1, 16, AreaDiTesto.getFont());
        if (AreaDiTestoFont != null) AreaDiTesto.setFont(AreaDiTestoFont);
        AreaDiTesto.setForeground(new Color(-1));
        AreaDiTesto.setText("Label");
        pannelloLogic.add(AreaDiTesto, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        scrollPaneVisualizza = new JScrollPane();
        scrollPaneVisualizza.setFocusable(true);
        Font scrollPaneVisualizzaFont = this.$$$getFont$$$("Inter", -1, 14, scrollPaneVisualizza.getFont());
        if (scrollPaneVisualizzaFont != null) scrollPaneVisualizza.setFont(scrollPaneVisualizzaFont);
        scrollPaneVisualizza.setForeground(new Color(-1));
        scrollPaneVisualizza.setVisible(false);
        pannelloLogic.add(scrollPaneVisualizza, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textAreaVisualizza = new JTextArea();
        textAreaVisualizza.setFocusable(true);
        Font textAreaVisualizzaFont = this.$$$getFont$$$("Inter", -1, 14, textAreaVisualizza.getFont());
        if (textAreaVisualizzaFont != null) textAreaVisualizza.setFont(textAreaVisualizzaFont);
        textAreaVisualizza.setForeground(new Color(-1));
        scrollPaneVisualizza.setViewportView(textAreaVisualizza);
        final Spacer spacer6 = new Spacer();
        dashboardOrganizzatore.add(spacer6, BorderLayout.NORTH);
        final Spacer spacer7 = new Spacer();
        dashboardOrganizzatore.add(spacer7, BorderLayout.SOUTH);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return dashboardOrganizzatore;
    }


    public DashboardOrganizzatore(String emailOrganizzatore) {

    }

    public JPanel getDashboardOrganizzatore() {
        return dashboardOrganizzatore;
    }

    public JButton getCreaHackaton() {
        return creaHackaton;
    }

    public JButton getVisualizzaHackathon() {
        return visualizzaHackaton;
    }

    public JButton getInvitaGiudiciButton() {
        return invitaGiudiciButton;
    }

    public JLabel getMessaggioBenvenuto2() {
        return messaggioBenvenuto2;
    }

    public JPanel getPannelloLogico() {
        return pannelloLogic;
    }

    public JLabel getAreaDiTesto() {
        return AreaDiTesto;
    }

    public JTextField getFieldScrittura() {
        return fieldScrittura;
    }

    public JLabel getMessaggioErroreOrg() {
        return messaggioErroreOrg;
    }

    public JButton getIndietroButton() {
        return indietroButton;
    }

    public JButton getCreateButton() {
        return createButton;
    }

    public JButton getAvantiButton() {
        return avantiButton;
    }

    public JScrollPane getScrollPaneVisualizza() {
        return scrollPaneVisualizza;
    }

    public JTextArea getTextAreaVisualizza() {
        return textAreaVisualizza;
    }
}

