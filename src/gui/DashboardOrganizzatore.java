package gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class DashboardOrganizzatore {
    private JPanel dashboardOrganizzatore;
    private JLabel messaggioBenvenuto2;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        dashboardOrganizzatore = new JPanel();
        dashboardOrganizzatore.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        dashboardOrganizzatore.setBackground(new Color(-15918294));
        dashboardOrganizzatore.setForeground(new Color(-1));
        dashboardOrganizzatore.setMaximumSize(new Dimension(700, 500));
        dashboardOrganizzatore.setMinimumSize(new Dimension(700, 500));
        dashboardOrganizzatore.setPreferredSize(new Dimension(700, 500));
        messaggioBenvenuto2 = new JLabel();
        messaggioBenvenuto2.setBackground(new Color(-15918294));
        Font messaggioBenvenuto2Font = this.$$$getFont$$$("Arial", -1, 14, messaggioBenvenuto2.getFont());
        if (messaggioBenvenuto2Font != null) messaggioBenvenuto2.setFont(messaggioBenvenuto2Font);
        messaggioBenvenuto2.setForeground(new Color(-1));
        messaggioBenvenuto2.setIcon(new ImageIcon(getClass().getResource("/icone/icons8-user-32.png")));
        messaggioBenvenuto2.setText("");
        dashboardOrganizzatore.add(messaggioBenvenuto2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTHEAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return dashboardOrganizzatore;
    }


    public DashboardOrganizzatore(String emailOrganizzatore) {

    }

    public JPanel getDashboardOrganizzatore() {
        return dashboardOrganizzatore;
    }

    public JLabel getMessaggioBenvenuto2() {
        return messaggioBenvenuto2;
    }
}
